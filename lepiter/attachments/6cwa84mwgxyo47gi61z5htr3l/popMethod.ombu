OmEntry {	#tags : {		#prior : OmReference [ '0' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StackMachine,				#isMetaSide : false			},			#name : #pop,			#protocol : #accessing,			#sourceCode : 'pop\n\tself assert: value isNotEmpty description: \'stack is empty\'.\n\t^ self removeLast',			#stamp : 'GlamorousAuthor 4/14/2022 11:05',			#package : #StackMachine		}	}}OmEntry {	#tags : {		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StackMachine,				#isMetaSide : false			},			#name : #push1andPop,			#protocol : #accessing,			#sourceCode : 'push1andPop\n\t<gtExample>\n\t| result popped |\n\tresult := self pushed1.\n\tpopped := result pop.\n\tself assert: popped equals: 1.\n\tself assert: result isEmpty.\n\t^ result ',			#stamp : 'GlamorousAuthor 4/14/2022 11:05',			#package : #StackMachine		}	}}